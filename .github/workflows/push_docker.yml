name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out pipe
      uses: actions/checkout@v2

    - name: Download twistcli from the Prisma Cloud Compute Console
      run: |
        curl --user ${{ secrets.PRISMA_ACCESS_KEY }}:${{ secrets.PRISMA_SECRET_KEY }} --output ./twistcli ${{ secrets.PRISMA_COMPUTE_URL }}/api/v1/util/twistcli 
        chmod a+x ./twistcli 

    - name: Build image
      env:
        IMAGE_TAG: nodejs_demo_image
      run: |
        docker build -t $IMAGE_TAG .

    - name: Scan the image
      env:
        IMAGE_TAG: nodejs_demo_image
      run: | 
        OUT="${GITHUB_WORKSPACE}/results.json"
        ./twistcli images scan \
          --address "${{ secrets.PRISMA_COMPUTE_URL }}" \
          -u "${{ secrets.PRISMA_ACCESS_KEY }}" \
          -p "${{ secrets.PRISMA_SECRET_KEY }}" \
          --output-file "$OUT" \
          --details \
          "${IMAGE_TAG}"

        echo "PWD: $(pwd)"
        echo "Workspace: $GITHUB_WORKSPACE"
        ls -la "$GITHUB_WORKSPACE"
        test -f "$OUT" || (echo "results.json not found at $OUT" && exit 1)

    - name: Upload scan results
      uses: actions/upload-artifact@v4
      with:
        name: twistcli-results
        path: ${{ github.workspace }}/results.json          
        
    - name: Sandbox the image
      env:
        IMAGE_TAG: nodejs_demo_image
      run: sudo -s ./twistcli sandbox --address ${{ secrets.PRISMA_COMPUTE_URL }} -u ${{ secrets.PRISMA_ACCESS_KEY }} -p ${{ secrets.PRISMA_SECRET_KEY }} --analysis-duration 2m ${{ env.IMAGE_TAG }}

    - name: Run Code Scan
      id: prisma
      uses: bridgecrewio/checkov-action@master
      env:
        PRISMA_API_URL: https://api4.prismacloud.io
      with:
        api-key: ${{ secrets.BC_API_KEY }}
        use_enforcement_rules: false
 

